#! /bin/bash

set -xe


#	remove stupid things from Plasma, generic KDE launchers, breeze cursors, etc.

rm -rf \
	/usr/share/icons/breeze_cursors /usr/share/icons/Breeze_Snow \
	/usr/share/applications/htop.desktop \
	/usr/share/applications/ibus-setup* \
	/usr/share/applications/info.desktop \
	/usr/share/applications/links2.desktop \
	/usr/share/applications/mc.desktop \
	/usr/share/applications/mcedit.desktop \
	/usr/share/applications/nsnake.desktop \
	/usr/share/applications/org.freedesktop.IBus* \
	/usr/share/applications/org.kde.kdeconnect.app.desktop \
	/usr/share/applications/org.kde.kdeconnect.sms.desktop \
	/usr/share/applications/org.kde.kdeconnect_open.desktop \
	/usr/share/applications/org.kde.kinfocenter.desktop \
	/usr/share/applications/org.kde.plasma.emojier.desktop


#	let nsnake be reachable through $PATH.

ln -svf /usr/games/nsnake /usr/bin/nsnake


#	add oh-my-zsh.

git clone https://github.com/robbyrussell/oh-my-zsh.git /etc/skel/.oh-my-zsh


#	add support for AppImages and add AppImages.

mkdir -p /Applications
mkdir -p /etc/skel/Applications
mkdir -p /etc/skel/.local/bin

echo -e "PATH=$PATH:/Applications\n" >> /etc/environment
sed -i "s|secure_path\=.*$|secure_path=\"$PATH:/Applications\"|g" /etc/sudoers
sed -i "/env_reset/d" /etc/sudoers

{
	printf "%s %s\n" \
		znx				"https://raw.githubusercontent.com/Nitrux/storage/master/AppImages/znx-development-x86_64.AppImage" \
		pnx				"https://raw.githubusercontent.com/Nitrux/storage/master/AppImages/PNX-x86_64.AppImage" \
		vmetal			"https://raw.githubusercontent.com/Nitrux/storage/master/AppImages/VMetal-x86_64.AppImage" \
		app				"https://github.com/AppImageCrafters/appimage-manager/releases/download/v0.1.0/app" \
		appimaged		"https://github.com/AppImage/appimaged/releases/download/continuous/appimaged-x86_64.AppImage" \
		appimagetool	"https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" \
		wine			"https://github.com/ferion11/Proton_Appimage/releases/download/continuous/proton-linux-x86-v4.2-PlayOnLinux-x86_64.AppImage"

	printf "%s %s\n" \
		kdenlive		"https://files.kde.org/kdenlive/release/kdenlive-20.08.1-x86_64.appimage" \
		libreoffice		"https://libreoffice.soluzioniopen.com/stable/standard/LibreOffice-fresh.standard-x86_64.AppImage" \
		gimp			"https://github.com/aferrero2707/gimp-appimage/releases/download/continuous/GIMP_AppImage-git-2.99.1-20200904-x86_64.AppImage" \
		waterfox		"https://raw.githubusercontent.com/Nitrux/storage/master/AppImages/Waterfox_Current-x86_64.AppImage" \
		mpv				"https://raw.githubusercontent.com/Nitrux/storage/master/AppImages/mpv-0.32.0-x86_64.AppImage" \
		inkscape		"https://inkscape.org/es/gallery/item/21590/Inkscape-3bc2e81-x86_64.AppImage" \
		lmms			"https://github.com/LMMS/lmms/releases/download/v1.2.1/lmms-1.2.1-linux-x86_64.AppImage"
} | {
	while read name url; do
		axel -a -q -o /Applications/$name "$url"
	done
}

chmod +x /Applications/*

mv /Applications/appimaged /etc/skel/.local/bin


#	workarounds for pnx.

ln -sv /home/.pnx/usr/lib/dri /usr/lib/dri
ln -sv /home/.pnx/usr/lib/pulseaudio /usr/lib/pulseaudio
ln -sv /home/.pnx/usr/lib/gdk-pixbuf-2.0 /usr/lib/gdk-pixbuf-2.0
ln -sv /home/.pnx/usr/lib/gs-plugins-13 /usr/lib/gs-plugins-13
ln -sv /home/.pnx/usr/lib/liblmdb.so /usr/lib/liblmdb.so
ln -sv /home/.pnx/usr/lib/systemd /usr/lib/systemd
ln -sv /home/.pnx/usr/lib/samba /usr/lib/samba
ln -sv /home/.pnx/usr/lib/girepository-1.0 /usr/lib/girepository-1.0
ln -sv /home/.pnx/usr/lib/tracker-2.0 /usr/lib/tracker-2.0
ln -sv /home/.pnx/usr/lib/WebKitNetworkProcess /usr/lib/WebKitNetworkProcess
ln -sv /home/.pnx/usr/lib/epiphany /usr/lib/epiphany
ln -sv /home/.pnx/usr/lib/opera /usr/lib/opera
ln -sv /home/.pnx/usr/lib/firefox /usr/lib/firefox
ln -sv /home/.pnx/usr/share/tracker /usr/share/tracker
ln -sv /home/.pnx/usr/share/xonotic /usr/share/xonotic
ln -sv /home/.pnx/usr/share/inkscape /usr/share/inkscape

mkdir -p /usr/lib/zsh/5.8/zsh/
ln -sv /home/.pnx/usr/lib/zsh/5.8/zsh/datetime.so /usr/lib/zsh/5.8/zsh/datetime.so


#	let krohnkite be configured from system settings.

ln -sv /usr/share/kwin/scripts/krohnkite/metadata.desktop /usr/share/kservices5/krohnkite.desktop


#	use mksh and zsh in userland.

ln -svf /bin/mksh /bin/sh

sed -i 's+SHELL=/bin/sh+SHELL=/bin/zsh+g' /etc/default/useradd
sed -i 's+DSHELL=/bin/bash+DSHELL=/bin/zsh+g' /etc/adduser.conf


#	workaround for mpv.

ln -sv /usr/lib/x86_64-linux-gnu/pulseaudio/libpulsecommon-13.0.so /usr/lib/x86_64-linux-gnu/pulseaudio/libpulsecommon-11.1.so


#	workaround for vmetal

ln -sv /usr/lib/x86_64-linux-gnu/libffi.so.7.1.0 /usr/lib/x86_64-linux-gnu/libffi.so.6


#	workaround for NVidia GPUs using PRIME configuration.
#	this will make output available on external ports.
#	FIXME: move to separate package that also installs the driver.

test -f /usr/share/X11/xorg.conf.d/10-nvidia.conf && {
	echo 'Nvidia Proprietary Driver installed!, adding X11 configuration.'
		> /usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf printf "%s\n" \
			'Section "OutputClass"' \
			'	Identifier "nvidia"' \
			'	MatchDriver "nvidia-drm"' \
			'	Driver "nvidia"' \
			'	Option "PrimaryGPU" "Yes"' \
			'	Option "AllowEmptyInitialConfiguration" "true"' \
			'	Option "AllowExternalGpus" "true"' \
			'EndSection'

		> /usr/share/X11/xorg.conf.d/10-amdgpu.conf printf "%s\n" \
			'Section "OutputClass"' \
			'    Identifier "AMDgpu"' \
			'    MatchDriver "amdgpu"' \
			'    Driver "modsetting"' \
			'EndSection'

		> /usr/share/X11/xorg.conf.d/10-intel.conf printf "%s\n" \
			'Section "OutputClass"' \
			'    Identifier "Intel"' \
			'    MatchDriver "i915"' \
			'    Driver "modsetting"' \
			'EndSection'

		> /etc/modprobe.d/blacklist-nouveau.conf printf "%s\n" \
			'blacklist nouveau'
} || {
	echo 'Nvidia Proprietary Driver not installed!, skipping X11 configuration.'
}


#	add xdg_dir environment variables

echo -e "XDG_CONFIG_DIRS=/etc/xdg" >> /etc/environment
echo -e "XDG_DATA_DIRS=/usr/local/share:/usr/share" >> /etc/environment


#	add documentation

{
	printf "%s %s\n" \
		Compendium.pdf		"https://github.com/Nitrux/iso-tool/raw/master/configs/other/compendium_offline.pdf" \
		FAQ.pdf				"https://github.com/Nitrux/iso-tool/raw/master/configs/other/faq_offline.pdf"
} | {
	while read name url; do
		axel -a -q -o /etc/skel/Desktop/$name "$url"
	done
}

mv /etc/skel/Desktop/Compendium.pdf	/etc/skel/Desktop/Nitrux\ —\ Compendium.pdf
mv /etc/skel/Desktop/FAQ.pdf /etc/skel/Desktop/Nitrux\ —\ FAQ.pdf


#	force set nitrux_cursors as the default x-curosr-theme

cp /usr/share/icons/nitrux_snow_cursors/index.theme /etc/X11/cursors/nitrux_cursors.theme
ln -svf /etc/X11/cursors/nitrux_cursors.theme /etc/alternatives/x-cursor-theme
sed -i '$ a Inherits=nitrux_snow_cursors' /etc/X11/cursors/nitrux_cursors.theme
